import numpy as np

# 1、一级模糊综合评判
# 影响运行费用的各因素的单因素评价矩阵为：
R23 = np.array([
     [0.18, 0.14, 0.18, 0.14, 0.13, 0.23],
     [0.15, 0.20, 0.15, 0.25, 0.10, 0.15],
     [0.25, 0.12, 0.13, 0.12, 0.18, 0.20],
     [0.16, 0.15, 0.21, 0.11, 0.20, 0.17],
     [0.23, 0.18, 0.17, 0.16, 0.15, 0.11],
     [0.19, 0.13, 0.12, 0.12, 0.11, 0.33],
     [0.17, 0.16, 0.15, 0.08, 0.25, 0.19]])
# 权重
A23 = np.array([1/7, 1/7, 1/7, 1/7, 1/7, 1/7, 1/7])
# 评价结果[1/7, 1/7, 1/7, 1/7, 1/7, 1/7, 1/7]
B23 = np.dot(A23, R23) #dot函数可理解为矩阵相乘

# 2、二级模糊综合评判
# 产品情况的二级评判如下：
R1 = np.array([
    [0.12, 0.18, 0.17, 0.23, 0.13, 0.17],
    [0.15, 0.13, 0.18, 0.25, 0.12, 0.17],
    [0.14, 0.13, 0.16, 0.18, 0.20, 0.19],
    [0.12, 0.14, 0.15, 0.17, 0.19, 0.23],
    [0.16, 0.12, 0.13, 0.25, 0.18, 0.16]])
A1 = np.array([0.2, 0.2, 0.2, 0.2, 0.2])
B1 = np.dot(A1, R1)
# 销售能力二级评判如下：
R2 = np.array([
    [0.13, 0.15, 0.14, 0.18, 0.16, 0.25],
    [0.12, 0.16, 0.13, 0.17, 0.19, 0.23],
    B23,
    [0.14, 0.13, 0.15, 0.16, 0.18, 0.24],
    [0.16, 0.15, 0.15, 0.17, 0.18, 0.19]]) #注意这里将B23直接拼接进去
A2 = np.array([0.2, 0.2, 0.2, 0.2, 0.2])
B2 = np.dot(A2, R2)

# 市场需求的二级评判
R3 = np.array([
    [0.15, 0.14, 0.13, 0.18, 0.14, 0.26],
    [0.16, 0.15, 0.18, 0.14, 0.16, 0.21]])
A3 = np.array([0.5, 0.5])
B3 = np.dot(A3, R3)

# 3、三级模糊综合评判
R = np.array([B1, B2, B3])
A = np.array([1/3, 1/3, 1/3])
B = np.dot(A, R)

print(B)


